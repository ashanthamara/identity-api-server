openapi: 3.0.0
info:
  description: >-
    This is the **RESTful API** for Applications Tag management in **WSO2 Identity Server**
  version: "v1"
  title: WSO2 Identity Server - Applications Tag Management
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: WSO2 Identity Server
    url: 'https://wso2.com/identity-and-access-management'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

security:
  - OAuth2: []
  - BasicAuth: []
paths:
  /applications-tags:
    get:
      tags:
        - Applications Tags
      operationId: getAllApplicationTags
      summary: |
        List all Tags
      description: |
        This API provides the capability to retrieve the list of tags available.
      parameters:
        - $ref: '#/components/parameters/limitWithoutDefaultQueryParam'
        - $ref: '#/components/parameters/offsetWithoutDefaultQueryParam'
        - $ref: '#/components/parameters/filterQueryParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTagsListResponse'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: "Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: "Not Implemented"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Applications Tags
      summary: |
        Add a Tag
      operationId: createApplicationTag
      description: |
        This API provides the capability to store the tag provided by users.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/tagmgt/add <br>
          <b>Scope required:</b> <br>
              * internal_tag_mgt_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTagModel'
        description: "This represents the application template to be created."
        required: true
      responses:
        '201':
          description: "Successful response."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTagCreationResponse'
          headers:
            Location:
              description: "Location of the newly created tag."
              schema:
                type: string
                example: "/t/wso2.com/api/server/v1/applications-tags/85e3f4b8-0d22-4181-b1e3-1651f71b88bd"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
        '409':
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: "Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: "Not Implemented"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /applications-tags/{tag-id}:
    get:
      tags:
        - Applications Tags
      summary: |
        Retrieve a tag by ID
      operationId: getApplicationTag
      description: >
        This API provides the capability to retrieve a tag from the tag id.
      parameters:
        - $ref: '#/components/parameters/tagIdPathParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTagResponse'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: "Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      tags:
        - Applications Tags
      summary: |
        Partially update a tag by ID
      operationId: patchTag
      description: |
        This API provides the capability to partially update a tag by ID.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/tagmgt/update <br>
          <b>Scope required:</b> <br>
              * internal_tag_mgt_update
      parameters:
        - $ref: '#/components/parameters/tagIdPathParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTagModel'
        description: This represents the application details to be updated.
        required: true
      responses:
        '200':
          description: Successfully Updated
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Applications Tags
      summary: |
        Delete a tag by tag ID.
      operationId: deleteApplicationTag
      description: |
        This API provides the capability to partially update a tag by ID.<br>
          <b>Permission required:</b> <br>
              * /permission/admin/manage/identity/tagmgt/delete <br>
          <b>Scope required:</b> <br>
              * internal_tag_mgt_delete
      parameters:
        - $ref: '#/components/parameters/tagIdPathParam'
      responses:
        '204':
          description: "Successfully Deleted"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: "Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    limitWithoutDefaultQueryParam:
      in: query
      name: limit
      required: false
      description: |
        Maximum number of records to return.
      schema:
        type: integer
    offsetWithoutDefaultQueryParam:
      in: query
      name: offset
      required: false
      description: |
        Number of records to skip for pagination.
      schema:
        type: integer
    filterQueryParam:
      name: filter
      in: query
      required: false
      description: |
        Condition to filter the retrieval of records. Supports 'sw', 'co', 'ew' and 'eq' operations.
        <br>
        /applications-tags?filter=name+eq+engineering
        <br>
        /applications-tags?filter=name+co+eng
      schema:
        type: string
    tagIdPathParam:
      in: path
      name: tag-id
      required: true
      description: |
        Application tag ID.
      schema:
        type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://localhost:9443/oauth2/authorize'
          tokenUrl: 'http://localhost:9763/oauth2/token'
          scopes: {}
  schemas:
    ApplicationTagsListResponse:
      type: object
      properties:
        totalResults:
          type: integer
          description: "Number of results that match the listing operation."
          example: 1
        startIndex:
          type: integer
          description: "Index of the first element of the page, which will be equal to offset + 1."
          example: 1
        count:
          type: integer
          description: "Number of elements in the returned page."
          example: 10
        applicationTags:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTagsListItem'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ApplicationTagsListItem:
      type: object
      properties:
        id:
          type: string
          example: "85e3f4b8-0d22-4181-b1e3-1651f71b88bd"
        name:
          type: string
          example: "HR"
        colour:
          type: string
          example: "#677b66"
        associatedAppsCount:
          type: integer
          example: "2"
        self:
          type: string
          example: "/t/wso2.com/api/server/v1/applications-tags/85e3f4b8-0d22-4181-b1e3-1651f71b88bd"

    ApplicationTagModel:
      type: object
      properties:
        name:
          type: string
          example: "HR"
        colour:
          type: string
          example: "#677b66"
      required:
        - name
        - colour

    ApplicationTagCreationResponse:
      type: object
      properties:
        id:
          type: string
          example: "85e3f4b8-0d22-4181-b1e3-1651f71b88bd"
        name:
          type: string
          example: "HR"
        colour:
          type: string
          example: "#677b66"

    ApplicationTagResponse:
      type: object
      properties:
        id:
          type: string
          example: "85e3f4b8-0d22-4181-b1e3-1651f71b88bd"
        name:
          type: string
          example: "HR"
        colour:
          type: string
          example: "#677b66"
        associatedAppsCount:
          type: integer
          example: "2"

    Error:
      type: object
      properties:
        code:
          type: string
          example: AAA-00000
        message:
          type: string
          example: Some error message.
        description:
          type: string
          example: Some error description.
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047

    Link:
      type: object
      properties:
        href:
          type: string
          example: "applications-tags?offset=10&limit=10"
        rel:
          type: string
          example: "next"
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ATPALIHAKKARA/applications-tags/v1
  - url: 'https://{server-url}/t/{tenant-domain}/api/server/v1'
    variables:
      tenant-domain:
        default: "carbon.super"
      server-url:
        default: "localhost:9443"
